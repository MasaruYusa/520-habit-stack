// 5:20 Habit Stack - Database Schema
// Last updated: 2025-10-19

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Use "postgresql" for production
  url      = env("DATABASE_URL")
}

// ============================================================================
// User & Authentication
// ============================================================================

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  accounts      Account[]
  sessions      Session[]
  goals         Goal[]
  dailyLogs     DailyLog[]
  notifications NotificationSubscription[]
  weeklySummaries WeeklySummary[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ============================================================================
// Habit Tracking
// ============================================================================

model Goal {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Goal configuration
  targetTime       String   // "05:20" (HH:mm format)
  timezone         String   @default("Asia/Tokyo")
  daysOfWeek       String   // JSON array: "[0,1,2,3,4,5,6]" (0=Sunday)

  // Habit stack (3-7 steps)
  habitStack       String   // JSON: [{"step": "Turn off alarm", "order": 1}, ...]

  // Status
  isActive         Boolean  @default(true)

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  dailyLogs        DailyLog[]

  @@index([userId])
  @@index([userId, isActive])
}

model DailyLog {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  goalId           String
  goal             Goal     @relation(fields: [goalId], references: [id], onDelete: Cascade)

  // Date tracking (stored as ISO date string: "2025-10-19")
  date             String   // YYYY-MM-DD format

  // Wake time tracking
  actualWakeTime   DateTime? // Full timestamp of actual wake time

  // Completion tracking
  completedSteps   String   // JSON array of completed step indices: "[0,1,2]"
  status           String   // "completed" | "snoozed" | "skipped"

  // Reasons
  snoozeReason     String?  // Free text or tag
  skipReason       String?  // Free text or tag

  // Optional mood tracking (P2 feature)
  moodScore        Int?     // 1-5 scale
  alertnessScore   Int?     // 1-5 scale

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([userId, goalId, date])
  @@index([userId, date])
  @@index([goalId, date])
}

// ============================================================================
// Notifications
// ============================================================================

model NotificationSubscription {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Web Push subscription details
  endpoint     String   @unique
  keys         String   // JSON: {"p256dh": "...", "auth": "..."}

  // Notification preferences
  nightReminder  Boolean @default(true)  // 21:00 reminder
  morningWakeup  Boolean @default(true)  // Target time wake-up

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

// ============================================================================
// Analytics & Summaries
// ============================================================================

model WeeklySummary {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Week range (Monday 00:00 - Sunday 23:59)
  weekStart        DateTime
  weekEnd          DateTime

  // Metrics
  completionRate   Float    // 0.0 - 1.0 (e.g., 0.857 = 6/7 days)
  currentStreak    Int      // Streak at end of week
  avgWakeTime      String   // "05:22" (average HH:mm)

  // AI-generated insights
  llmInsights      String   // Text summary from Claude

  createdAt        DateTime @default(now())

  @@unique([userId, weekStart])
  @@index([userId, weekStart])
}
